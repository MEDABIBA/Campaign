/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "minimum",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "approveRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "createRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "finalizeRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSummary",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumContribution",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "complete",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "approvalCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50604051610b69380380610b69833981016040819052602c916061565b6000805461ffff909316600160a01b026001600160b01b03199093166001600160a01b039092169190911791909117905560ab565b60008060408385031215607357600080fd5b825161ffff81168114608457600080fd5b60208401519092506001600160a01b038116811460a057600080fd5b809150509250929050565b610aaf806100ba6000396000f3fe6080604052600436106100915760003560e01c806381d12c581161005957806381d12c58146101a65780638a9cfd55146101d7578063937e09b1146101f7578063d7bb99ba1461022c578063d7d1bbdb1461023457600080fd5b806303441006146100965780630a144391146100b85780633410452a146100fd5780634051ddac1461011b578063481c6a751461016e575b600080fd5b3480156100a257600080fd5b506100b66100b13660046106a3565b610254565b005b3480156100c457600080fd5b506100e86100d33660046106d8565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561010957600080fd5b506003546040519081526020016100f4565b34801561012757600080fd5b506000546003546002546040805147815261ffff600160a01b860481166020830152918101939093521660608201526001600160a01b03909116608082015260a0016100f4565b34801561017a57600080fd5b5060005461018e906001600160a01b031681565b6040516001600160a01b0390911681526020016100f4565b3480156101b257600080fd5b506101c66101c13660046106a3565b6103cd565b6040516100f49594939291906106fa565b3480156101e357600080fd5b506100b66101f2366004610786565b6104ac565b34801561020357600080fd5b5060005461021990600160a01b900461ffff1681565b60405161ffff90911681526020016100f4565b6100b661054c565b34801561024057600080fd5b506100b661024f3660046106a3565b6105c9565b6000546001600160a01b031633146102875760405162461bcd60e51b815260040161027e90610856565b60405180910390fd5b60006003828154811061029c5761029c610899565b6000918252602090912060028054600590930290910192506102c19161ffff166108c5565b61ffff1681600301541161030e5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f75676820617070726f76616c7360601b604482015260640161027e565b6002810154600160a01b900460ff16156103755760405162461bcd60e51b815260206004820152602260248201527f5468697320636f6e747261637420697320616c726561647920636f6d706c6574604482015261195960f21b606482015260840161027e565b600281015460018201546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156103b5573d6000803e3d6000fd5b50600201805460ff60a01b1916600160a01b17905550565b600381815481106103dd57600080fd5b9060005260206000209060050201600091509050806000018054610400906108f7565b80601f016020809104026020016040519081016040528092919081815260200182805461042c906108f7565b80156104795780601f1061044e57610100808354040283529160200191610479565b820191906000526020600020905b81548152906001019060200180831161045c57829003601f168201915b5050505060018301546002840154600390940154929390926001600160a01b0382169250600160a01b90910460ff169085565b6000546001600160a01b031633146104d65760405162461bcd60e51b815260040161027e90610856565b60038054600181018083556000838152919290839081106104f9576104f9610899565b600091825260209091206005909102019050806105168682610980565b506001810193909355506002820180546001600160a81b0319166001600160a01b03909216919091179055600060039091015550565b600054600160a01b900461ffff1634101561056657600080fd5b3360009081526001602052604090205460ff166105c7573360009081526001602081905260408220805460ff191690911790556002805461ffff16916105ab83610a3f565b91906101000a81548161ffff021916908361ffff160217905550505b565b6000600382815481106105de576105de610899565b6000918252602080832033845260019091526040909220546005909102909101915060ff1661064f5760405162461bcd60e51b815260206004820152601760248201527f596f75206d75737420626520616e20696e766573746f72000000000000000000604482015260640161027e565b33600090815260048201602052604090205460ff161561066e57600080fd5b3360009081526004820160205260408120805460ff191660011790556003820180549161069a83610a60565b91905055505050565b6000602082840312156106b557600080fd5b5035919050565b80356001600160a01b03811681146106d357600080fd5b919050565b6000602082840312156106ea57600080fd5b6106f3826106bc565b9392505050565b60a08152600086518060a084015260005b81811015610728576020818a0181015160c086840101520161070b565b50600060c0828501015260c0601f19601f83011684010191505085602083015261075d60408301866001600160a01b03169052565b9215156060820152608001529392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561079b57600080fd5b833567ffffffffffffffff8111156107b257600080fd5b8401601f810186136107c357600080fd5b803567ffffffffffffffff8111156107dd576107dd610770565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561080c5761080c610770565b60405281815282820160200188101561082457600080fd5b81602084016020830137600060209282018301529450850135925061084d9050604085016106bc565b90509250925092565b60208082526023908201527f54686520636f6e74616374206d61792063616c6c206f6e6c79206d616e61676560408201526203910960ed1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff8316806108e757634e487b7160e01b600052601260045260246000fd5b8061ffff84160491505092915050565b600181811c9082168061090b57607f821691505b60208210810361092b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561097b57806000526020600020601f840160051c810160208510156109585750805b601f840160051c820191505b818110156109785760008155600101610964565b50505b505050565b815167ffffffffffffffff81111561099a5761099a610770565b6109ae816109a884546108f7565b84610931565b6020601f8211600181146109e257600083156109ca5750848201515b600019600385901b1c1916600184901b178455610978565b600084815260208120601f198516915b82811015610a1257878501518255602094850194600190920191016109f2565b5084821015610a305786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600061ffff821661ffff8103610a5757610a576108af565b60010192915050565b600060018201610a7257610a726108af565b506001019056fea2646970667358221220691635bf32881892175b07415e639eb34ef82aa7325bccd513c86bee263aa9bb64736f6c634300081c0033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    minimum: BigNumberish,
    sender: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(minimum, sender, overrides || {});
  }
  override deploy(
    minimum: BigNumberish,
    sender: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(minimum, sender, overrides || {}) as Promise<
      Campaign & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Campaign__factory {
    return super.connect(runner) as Campaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new Interface(_abi) as CampaignInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Campaign {
    return new Contract(address, _abi, runner) as unknown as Campaign;
  }
}
